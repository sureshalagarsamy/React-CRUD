{"version":3,"sources":["TableData/TableData.tsx","TableHeader/TableHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tableDataEditable","className","TableData","props","React","useState","response","setResponse","cloneTableData","setCloneTableData","searchKey","setSearchKey","a","axios","get","data","console","log","useEffect","fetchData","filterBySearchKey","modifiedClonedData","map","key","toggleDeleteMember","isSelectAllClicked","modifiedData","filter","item","isDeleteSelectedRecordsClicked","isDeleted","toggleEdit","afterFiltered","element","name","toUpperCase","indexOf","email","role","editMember","param","id","deleteMember","afterRemoved","selectMemberToDelete","editMemberDetail","currentRow","editedValue","flag","index","onClick","value","onChange","e","target","TableHeader","setIsSelectAllClicked","selectedRecordClick","setSelectedRecordClick","callbackForDeleteSelectedRecords","selectAll","callbackForSelectAll","App","toggleSelectAll","setToggleSelectAll","deleteSelectedRecord","setDeleteSelectedRecord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e2bc0f8.chunk.js","sourcesContent":["import './TableData.css';\r\nimport '../Global/Global.css';\r\n\r\nimport { BsCheckBox, BsFileEarmarkCheck, BsPencil, BsSquare, BsTrash } from \"react-icons/bs\";\r\n\r\nimport { ITableData } from '../Global/ITableData';\r\nimport Pagination from '../Global/Pagination';\r\nimport React from 'react';\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from 'axios';\r\nimport className from 'classnames';\r\n\r\nexport interface IProps {\r\n\tisSelectAllClicked: boolean;\r\n\tisDeleteSelectedRecordsClicked: boolean;\r\n\tsearchKey: string;\r\n}\r\n\r\nconst tableDataEditable = className( 'table-data', 'table-data-editable' );\r\n\r\nconst TableData: React.FunctionComponent<IProps> = ( props ) => {\r\n\tconst [ response, setResponse ] = React.useState<ITableData[]>( [] );\r\n\tconst [ cloneTableData, setCloneTableData ] = React.useState<ITableData[]>( [] );\r\n\tconst [ searchKey, setSearchKey ] = React.useState<string>( props.searchKey );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tfetchData();\r\n\t}, [] );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tsetSearchKey( props.searchKey );\r\n\t}, [ props.searchKey ] );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tfilterBySearchKey();\r\n\t}, [ searchKey ] );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tconst modifiedClonedData = [ ...cloneTableData ];\r\n\t\tmodifiedClonedData.map( ( key: ITableData ) => {\r\n\t\t\tkey.toggleDeleteMember = props.isSelectAllClicked;\r\n\t\t} )\r\n\t\tsetCloneTableData( modifiedClonedData );\r\n\t}, [ props.isSelectAllClicked ] );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tconst modifiedData = cloneTableData.filter( ( item ) => item.toggleDeleteMember === false );\r\n\t\tsetCloneTableData( modifiedData );\r\n\t}, [ props.isDeleteSelectedRecordsClicked ] );\r\n\r\n\tReact.useEffect( () => {\r\n\t\tresponse.map( ( key: ITableData ) => {\r\n\t\t\tkey.isDeleted = false;\r\n\t\t\tkey.toggleEdit = false;\r\n\t\t\tkey.toggleDeleteMember = false;\r\n\t\t} )\r\n\t\tsetCloneTableData( response );\r\n\t}, [ response ] )\r\n\r\n\tasync function fetchData() {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get( 'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json' );\r\n\t\t\tsetResponse( response.data );\r\n\t\t} catch ( e ) {\r\n\t\t\tconsole.log( e );\r\n\t\t}\r\n\t}\r\n\r\n\tconst filterBySearchKey = () => {\r\n\t\tconst modifiedClonedData = [ ...response ];\r\n\t\tconst afterFiltered = modifiedClonedData.filter( function ( element ) {\r\n\t\t\treturn (\r\n\t\t\t\t( element.name ).toUpperCase().indexOf( searchKey.toUpperCase() ) > -1 ||\r\n\t\t\t\t( element.email ).toUpperCase().indexOf( searchKey.toUpperCase() ) > -1 ||\r\n\t\t\t\t( element.role ).toUpperCase().indexOf( searchKey.toUpperCase() ) > -1 )\r\n\t\t} );\r\n\t\tsetCloneTableData( afterFiltered )\r\n\t}\r\n\r\n\tconst editMember = ( param: ITableData ) => () => {\r\n\t\tconst modifiedClonedData = [ ...cloneTableData ];\r\n\t\tmodifiedClonedData.map( ( key: ITableData ) => {\r\n\t\t\tif ( key.id === param.id ) {\r\n\t\t\t\tkey.toggleEdit = true;\r\n\t\t\t}\r\n\t\t} )\r\n\t\tsetCloneTableData( modifiedClonedData );\r\n\t}\r\n\r\n\tconst deleteMember = ( param: ITableData ) => () => {\r\n\t\tconst afterRemoved = cloneTableData.filter( function ( element ) { return element.id !== param.id } );\r\n\t\tsetCloneTableData( afterRemoved );\r\n\t}\r\n\r\n\tconst selectMemberToDelete = ( param: ITableData ) => () => {\r\n\t\tconst modifiedClonedData = [ ...cloneTableData ];\r\n\t\tmodifiedClonedData.map( ( key: ITableData ) => {\r\n\t\t\tif ( key.id === param.id ) {\r\n\t\t\t\tkey.toggleDeleteMember = !param.toggleDeleteMember;\r\n\t\t\t}\r\n\t\t} )\r\n\t\tsetCloneTableData( modifiedClonedData );\r\n\t}\r\n\r\n\tconst editMemberInfo = ( param: ITableData ) => () => {\r\n\t\tconst modifiedClonedData = [ ...cloneTableData ];\r\n\t\tmodifiedClonedData.map( ( key: ITableData ) => {\r\n\t\t\tif ( key.id === param.id ) {\r\n\t\t\t\tkey.toggleEdit = false\r\n\t\t\t}\r\n\t\t} )\r\n\t\tsetCloneTableData( modifiedClonedData );\r\n\t}\r\n\r\n\tconst editMemberDetail = ( currentRow: ITableData, editedValue: string, flag: string ) => {\r\n\t\tconsole.log( currentRow, editedValue );\r\n\t\tconst modifiedClonedData = [ ...cloneTableData ];\r\n\t\tmodifiedClonedData.map( ( key: ITableData ) => {\r\n\t\t\tif ( key.id === currentRow.id ) {\r\n\t\t\t\tif ( flag === 'NAME' ) {\r\n\t\t\t\t\tkey.name = editedValue;\r\n\t\t\t\t} else if ( flag === 'EMAIL' ) {\r\n\t\t\t\t\tkey.email = editedValue;\r\n\t\t\t\t} else if ( flag === 'ROLE' ) {\r\n\t\t\t\t\tkey.role = editedValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\tsetCloneTableData( modifiedClonedData );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"table-data-panel\">\r\n\t\t\t{ cloneTableData.map( ( key: ITableData, index: number ) => {\r\n\t\t\t\treturn (\r\n\r\n\t\t\t\t\t<div className={ key.toggleEdit ? tableDataEditable : \"table-data\" } key={ index }>\r\n\t\t\t\t\t\t<div className=\"column-one\">\r\n\t\t\t\t\t\t\t{ key.toggleDeleteMember ?\r\n\t\t\t\t\t\t\t\t<div className=\"checkBox\">\r\n\t\t\t\t\t\t\t\t\t<BsCheckBox onClick={ selectMemberToDelete( key ) } />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<div className=\"emptySquare\">\r\n\t\t\t\t\t\t\t\t\t<BsSquare onClick={ selectMemberToDelete( key ) } />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"column-two\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey.toggleEdit ?\r\n\t\t\t\t\t\t\t\t\t<input value={ key.name }\r\n\t\t\t\t\t\t\t\t\t\tonChange={ ( e ) => editMemberDetail( key, e.target.value, 'NAME' ) } />\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tkey.name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"column-three\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey.toggleEdit ? <input value={ key.email }\r\n\t\t\t\t\t\t\t\t\tonChange={ ( e ) => editMemberDetail( key, e.target.value, 'EMAIL' ) } />\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tkey.email\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"column-four\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey.toggleEdit ? <input value={ key.role }\r\n\t\t\t\t\t\t\t\t\tonChange={ ( e ) => editMemberDetail( key, e.target.value, 'ROLE' ) } />\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tkey.role\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"column-five\">\r\n\t\t\t\t\t\t\t<div className=\"editIcon\">\r\n\t\t\t\t\t\t\t\t{ key.toggleEdit ?\r\n\t\t\t\t\t\t\t\t\t<BsFileEarmarkCheck onClick={ editMemberInfo( key ) } />\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<BsPencil onClick={ editMember( key ) } /> }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"deleteIcon\">\r\n\t\t\t\t\t\t\t\t{ !key.isDeleted ? <BsTrash onClick={ deleteMember( key ) } /> : null }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} ) }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TableData;","import './TableHeader.css';\r\nimport '../Global/Global.css';\r\n\r\nimport { BsCheckBox, BsSquare, BsTrash } from \"react-icons/bs\";\r\n\r\nimport React from 'react';\r\n\r\nexport interface IProps {\r\n\tcallbackForSelectAll: ( param: boolean ) => void;\r\n\tcallbackForDeleteSelectedRecords: ( param: boolean ) => void;\r\n}\r\n\r\nconst TableHeader: React.FunctionComponent<IProps> = ( props ) => {\r\n\tconst [ isSelectAllClicked, setIsSelectAllClicked ] = React.useState<boolean>( false )\r\n\tconst [ selectedRecordClick, setSelectedRecordClick ] = React.useState<boolean>( false )\r\n\r\n\tReact.useEffect( () => {\r\n\t\tprops.callbackForDeleteSelectedRecords( selectedRecordClick );\r\n\t}, [ selectedRecordClick ] )\r\n\r\n\tconst selectAll = () => () => {\r\n\t\tsetIsSelectAllClicked( !isSelectAllClicked )\r\n\t\tprops.callbackForSelectAll( !isSelectAllClicked );\r\n\t}\r\n\r\n\tconst deleteSelectedRecord = () => () => {\r\n\t\tsetSelectedRecordClick( !selectedRecordClick );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"table-header\">\r\n\t\t\t<div className=\"column-one\">\r\n\t\t\t\t<div className=\"action-panel\">\r\n\t\t\t\t\t{ isSelectAllClicked ?\r\n\t\t\t\t\t\t<div className=\"checkBox\">\r\n\t\t\t\t\t\t\t<BsCheckBox onClick={ selectAll() } />\r\n\t\t\t\t\t\t</div> :\r\n\t\t\t\t\t\t<div className=\"emptySquare\">\r\n\t\t\t\t\t\t\t<BsSquare onClick={ selectAll() } />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className=\"deleteIcon\">\r\n\t\t\t\t\t\t<BsTrash onClick={ deleteSelectedRecord() } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"column-two\">Name</div>\r\n\t\t\t<div className=\"column-three\">Email</div>\r\n\t\t\t<div className=\"column-four\">Role</div>\r\n\t\t\t<div className=\"column-five\">Actions</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TableHeader;","import './App.css';\n\nimport React from 'react';\nimport TableData from './TableData/TableData';\nimport TableHeader from './TableHeader/TableHeader';\n\nconst App: React.FunctionComponent<{}> = () => {\n\tconst [ toggleSelectAll, setToggleSelectAll ] = React.useState<boolean>( false );\n\tconst [ deleteSelectedRecord, setDeleteSelectedRecord ] = React.useState<boolean>( false );\n\tconst [ searchKey, setSearchKey ] = React.useState<string>( '' );\n\n\tReact.useEffect( () => {\n\t\tsetSearchKey( searchKey )\n\t}, [ searchKey ] );\n\n\tconst selectAll = () => () => {\n\t\tsetToggleSelectAll( !toggleSelectAll );\n\t}\n\n\tconst deleteSelectedRecords = () => ( param: boolean ) => {\n\t\tsetDeleteSelectedRecord( param );\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"page-content\">\n\t\t\t\t<div className=\"filter-panel\">\n\t\t\t\t\t<input value={ searchKey } onChange={ ( e ) => setSearchKey( e.target.value ) } />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"table-panel\">\n\t\t\t\t\t<TableHeader\n\t\t\t\t\t\tcallbackForSelectAll={ selectAll() }\n\t\t\t\t\t\tcallbackForDeleteSelectedRecords={ deleteSelectedRecords() }\n\t\t\t\t\t/>\n\t\t\t\t\t<TableData\n\t\t\t\t\t\tsearchKey={ searchKey }\n\t\t\t\t\t\tisSelectAllClicked={ toggleSelectAll }\n\t\t\t\t\t\tisDeleteSelectedRecordsClicked={ deleteSelectedRecord }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}